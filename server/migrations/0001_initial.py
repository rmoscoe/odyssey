# Generated by Django 4.2.2 on 2023-06-27 04:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('created_at', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('game', models.CharField(max_length=80, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('exposition', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('incitement', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('climax', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('denoument', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('progress', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('active', 'active'), ('archived', 'archived')], max_length=10)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'adventure',
                'ordering': ['user_id', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
                ('challenge', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('setting', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('plot_twist', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('clue', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('progress', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Complete', 'Complete')], default='Not Started', max_length=15)),
                ('adventure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.adventure')),
            ],
            options={
                'db_table': 'scene',
                'ordering': ['adventure_id', 'sequence'],
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_type', models.CharField(blank=True, max_length=31, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('description', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('stats', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('progress', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Complete', 'Complete')], default='Not Started', max_length=15)),
                ('scene_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.scene')),
            ],
            options={
                'db_table': 'encounter',
            },
        ),
        migrations.CreateModel(
            name='Custom_Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('value', models.TextField(blank=True, validators=[django.core.validators.RegexValidator('(drop database)|(drop table (adventure|custom_field|encounter|scene|user))', flags=re.RegexFlag['IGNORECASE'], inverse_match=True, message='That text is not allowed. Please revise your entry.')])),
                ('adventure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.adventure')),
                ('encounter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.encounter')),
                ('scene_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.scene')),
            ],
            options={
                'db_table': 'custom_field',
            },
        ),
    ]
